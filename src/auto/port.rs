// Generated by gir (https://github.com/gtk-rs/gir @ unstable-2021-11-21)
// from /nix/store/1gli05cgwhqdc8papdgi4y98l2xzssmq-wireplumber.gir/share/gir-1.0 (@ ???)
// from /nix/store/5njndanmnlsxkgl5yyrmkfs8a4909cxa-gobject-introspection-1.70.0-dev/share/gir-1.0 (@ ???)
// DO NOT EDIT

use crate::Direction;
use crate::GlobalProxy;
use crate::Object;
use crate::PipewireObject;
use crate::Proxy;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "WpPort")]
    pub struct Port(Object<ffi::WpPort, ffi::WpPortClass>) @extends GlobalProxy, Proxy, Object, @implements PipewireObject;

    match fn {
        type_ => || ffi::wp_port_get_type(),
    }
}

impl Port {
    #[doc(alias = "wp_port_get_direction")]
    #[doc(alias = "get_direction")]
    pub fn direction(&self) -> Direction {
        unsafe {
            from_glib(ffi::wp_port_get_direction(self.to_glib_none().0))
        }
    }
}

impl fmt::Display for Port {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("Port")
    }
}
